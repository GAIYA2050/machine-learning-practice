决策树的一个重要任务是为了理解数据中所蕴含的知识信息，因此决策树可以使用不熟悉的数据集合，
并从中提取出一系列规则，这些机器根据数据集创建规则的过程，就是机器学习的过程。

决策树的优点：计算复杂度不高，输出结果易于理解，对中间值的缺失不敏感，可以处理不相关特征
数据；缺点：可能会产生过度匹配问题；适用数据类型：数值型和标称型。

构造决策树时需要解决的第一个问题就是：当前数据集上的哪个特征在划分数据分类时起决定性作用。
为了找到决定性的特征，划分出最好的结果，我们必须评估每个特征（特征评估的准则）。

创建分支的伪代码函数：
createBranch()
检测数据集中的每个子项是否属于同一分类：
If so return 类标签
Else
    寻找划分数据集的最好特征
    划分数据集
    创建分支节点
        for 每个划分的子集
            调用函数createBranch并增加返回结果到分支节点中
return 分支节点

决策树的一般流程
（1）收集数据：可以使用任何方法。
（2）准备数据：树构造算法只适合于标称型数据，因此数值型数据必须离散化。
（3）分析数据：可以使用任何方法，构造树完成之后，我们应该检查图形是否符合预期。
（4）训练算法：构造树的数据结构。
（5）测试算法：使用经验树计算错误率。
（6）使用算法：此步骤可以适用于任何监督学习算法，而使用决策树可以更好地理解数据的
     内在含义。

信息增益
划分数据集的大原则是：将无序的数据变得更加有序。我们可以使用多种方法划分数据集，但是每种
方法都有各自的优缺点。一种常用的方法就是使用信息论（entropy信息的期望值）度量信息。在划
分数据集之前之后信息发生变化称为信息增益，这样就可以计算每个特征值划分数据集获得的信息增
益，获得信息增益最高的特征就是最好的选择（因为信息量越大，对事物的描述越准确）。另外一个
度量集合无序程度的方法是基尼不纯度（Gini impurity），简而言之就是从一个数据集中随机选取
子项，度量其被错误分类到其他组的概率。

划分数据集
我们将对每个特征划分数据集的结果计算一次信息熵，然后依此判断按照哪个特征划分数据集是最好
的方式。

递归构建决策树
构建决策树的工作原理如下：得到原始数据集，然后基于最好的属性值划分数据集，由于特征值可能
多于两个，因此可能存在大于两个分支的数据集划分。第一次划分之后，数据将被向下传递到树分支
的下一个节点，在这个节点上，我们可以再次划分数据。因此我们可以采用递归的原则处理数据集。
递归的结束条件是:程序遍历完所有划分数据集的属性，或者每个分支下的所有实例都具有相同的分
类。如果所有的实例具有相同的分类，则得到一个叶子节点或者终止块。任何到达叶子节点的数据必
然属于叶子节点的分类。由于某些算法在运行时并不总是在每次划分分组时都会消耗特征，因此这些
算法在实际使用时可以设置可以划分的最大分组数目。还有一个问题就是，如果数据集已经处理了所
有的属性，但类标签依然不是唯一的，此时我们需要决定如何定义该叶子节点，常用的方法是多数
表决决定叶子节点的分类（也可以视情况适当加权后表决）。

测试算法：使用决策树执行分类
依靠训练数据构造决策树之后，然后将它用于实际数据的分类。在执行数据分类时，需要使用决策树
以及用于构造决策树的标签向量。然后，程序比较测试数据与决策树上的数值，递归执行该过程直到
进入叶子节点；最后将测试数据定义为叶子节点所属的类型。

使用算法：决策树的存储
构造决策树是很耗时的任务，即使处理很小的数据集，也要花费几秒的时间，如果数据集很大，这将
耗费大量的计算时间。但使用已经创建好的决策树解决分类我呢提，则可以很快完成。因此，未来节
省计算时间，最好能够在每次执行分类时调用已经构造好的决策树。python模块pickle序列化对象，
可以很好地解决这个问题。序列化对象可以在磁盘上保存对象，并在需要的时候读取出来。任何对象
都可以执行序列化操作，字典对象也不例外。

示例：使用决策树预测隐形眼镜类型
（1）收集数据：提供的文本文件。
（2）准备数据：解析由tab键分隔的数据行。
（3）分析数据：快速检查数据，确保正确解析数据内容，使用createPlot()函数绘制最终的树形图。
（4）训练算法：使用createTree()函数。
（5）测试算法：编写测试函数验证决策树可以正确分类给定的数据实例。
（6）使用算法：存储树的数据结构，以便下次使用时无需重新构造树。

有时候我们构造出的决策树非常好的匹配了实验数据，然而这些匹配选项可能太多了，这可能导致过
度匹配的问题（一旦出现了一些新数据，这样的决策树可能效果非常差）。为了减少过度匹配的问题，
我们可以裁剪决策树，去掉一些不必要的叶子节点，如果叶子节点只能增加少许信息，则可以删除该
节点，奖它并入到其他叶子节点中。
